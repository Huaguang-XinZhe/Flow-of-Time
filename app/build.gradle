plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // 新增插件
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.huaguang.flowoftime'
    compileSdk 33
    // 这是为了在同一个手机上安装多个相同应用而设置的
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.huaguang.flowoftime"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }

        prod_dev { // 产线的名称不能使用 `-`，可以使用下划线！！！
            applicationIdSuffix ".prod.dev"
            versionNameSuffix "-prod-dev"
        }

        prod {
            // 这里不需要做任何特殊配置，prod flavor 将使用 defaultConfig 中的配置
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    // Junit5 库要求添加
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    // 解决重复的 kotlin 标准库问题
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10"

    // 非测试依赖库————————————————————————————————————————————————————————
    // 原来的 material 库
    implementation 'androidx.compose.material:material'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')

    // Room components
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // LiveData 相关库
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.compose.runtime:runtime-livedata:1.5.1"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'

    // For Kotlin + Coroutines（WorkManager）
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    androidTestImplementation "androidx.work:work-testing:2.8.1"

    // 分页加载依赖
    implementation "androidx.paging:paging-runtime:3.2.1"
    implementation 'androidx.paging:paging-runtime-ktx:3.2.1'
    implementation 'androidx.paging:paging-compose:3.2.1'

    // json 对象序列化库（用 Gson 不如用 Serialization）
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'

    // Hilt 依赖注入框架（模块部分）
    implementation 'com.google.dagger:hilt-android:2.46.1'
    kapt 'com.google.dagger:hilt-compiler:2.46.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.1' // 要让 Fragment 也实现依赖注入，就必须加这一行

    // 能定位到代码的 Log 库
    implementation 'com.github.ardakaplan:RDALogger:1.0.0'

    // DataStore 库，替代 SP
    implementation "androidx.datastore:datastore-preferences:1.0.0" // preferences（使用协程保证数据的一致性）
    implementation "androidx.datastore:datastore:1.0.0" // proto（跨进程安全访问）

    // ConstraintLayout 库
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'

    // Coil Compose 组件库（注意，一定要带 compose）
    implementation("io.coil-kt:coil-compose:2.4.0")
    implementation("io.coil-kt:coil-svg:2.4.0")

    // navigation 导航库
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // 测试相关库————————————————————————————————————————————————————————————————
    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.24.5'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'

    // 郭神的数据库可视化库——Glance
    debugImplementation 'com.guolindev.glance:glance:1.1.0'

    // Junit5 库
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

}